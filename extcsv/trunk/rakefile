begin	
  require 'rubygems'
  require 'rake/gempackagetask'
rescue Exception
  nil
end
require 'rake/clean'
require 'rake/testtask'
require 'rake/rdoctask'

CLEAN.include('**/*.out')
SPEC          = eval(File.open("gemspec","r").read)
CHANGELOGFILE = "CHANGELOG"

def filename_to_sym(filename)
  File.basename(filename,File.extname(filename)).to_sym
end

# ====================================================================
# TEST TASKS
test_tasks = {
  :test_all   => ["Run all tests"],
  :test_gr    => ["Run graphical Test"],
  :test_syn   => ["Syntax Check for each ruby file in the project"]
}
# Syntax checkning task
task :test_syn do
  Dir.glob("**/*.rb").each {|file|
    printf "Checking Syntax of #{file} ..."
    system("ruby -c #{file}")
  }
end
# Test tasks for each test file
SPEC.test_files.each do |test_file|
  next unless File.extname(test_file) == ".rb"
  Rake::TestTask.new(filename_to_sym(test_file)) do |t|
    test_tasks[:test_all]  << filename_to_sym(test_file)
    test_tasks[:test_gr]   << filename_to_sym(test_file) if /display/.match(test_file)
    t.test_files = FileList[test_file]
    t.warning = false
    t.verbose = true
  end
end

# Test Tasks for groups of test files
test_tasks.each do |k,v|
  desc  v[0]
  task k => v[1..-1]
end
# ====================================================================
# Create a task that will package the software into distributable
# tar, zip and gem files.
if ! defined?(Gem)
  puts "Package Target requires RubyGEMs"
else
  package_task = Rake::GemPackageTask.new(SPEC) do |pkg|
    pkg.need_zip = false
    pkg.need_tar = false
  end
end

# ====================================================================
desc "Build package for further developement"
task :build_dev do
  files = SPEC.files + Dir.glob("test/data/*")
#require 'pp';  pp files;end
  com = "tar czf pkg/#{SPEC.name}-#{SPEC.version}-src.tgz #{files.join(" ")}"
  system(com)
end
# ====================================================================
desc "Install the Library with docs"
task :install do
  command = "gem install pkg/#{SPEC.name}-#{SPEC.version}.gem"
  puts command
  system(command)
end
task :smallInstall do 
  command = "gem install pkg/#{SPEC.name}-#{SPEC.version}.gem --no-ri --no-rdoc"
  puts command
  system(command)
end
#desc "Only install what is in bin to /usr/local/bin"
#task :binstall do
#  if File.directory?('/usr/local/bin')
#    bins = Dir.glob("bin/*.rb")
#    command = "install -m 755 #{bins.join(' ')} /usr/local/bin"
#    puts command
#    system(command)
#  end
#end
# ====================================================================
desc "All"
task :all => [:install, :populate] do
end

# ====================================================================
# Create a task to build the RDOC documentation tree.
Rake::RDocTask.new("rdoc") { |rdoc|
  rdoc.rdoc_dir = 'rdoc'
  rdoc.title    = "extcsv - Make csv-like Data feel ike DB-tables"
  rdoc.options << '-ad' << '--line-numbers' << '--inline-source'
  rdoc.rdoc_files.include('lib/**/*.rb', 'doc/**/*.rdoc')
}

############################################################
# ====================================================================
# Task to build and populate the changelog
desc "build changelog"
task :changelog do
  changelogfile_pop = "#{SPEC.name}_#{CHANGELOGFILE}.html"
  changelog_proc    = "/usr/local/bin/redcloth"
  command = "#{changelog_proc} #{CHANGELOGFILE} > #{changelogfile_pop}"
  puts command 
  system(command)
end
###############################################################################
desc "renew the tags file"
task :tags do
  com = "rtags --vi -f tags lib/*.rb"
  system(com)
end
#
desc "go on editing from last Session if possible"
task :edit do
  visual_mode = (ENV["vimode"].nil?) ? '-p' : ENV["vimode"]
  com = (File.exist?("Session.vim"))\
    ? 'vim -S'\
    : "vim #{SPEC.files.join(" ")} rakefile #{visual_mode}"
  puts com
  system(com)
end
#
# vim:ft=ruby
#
